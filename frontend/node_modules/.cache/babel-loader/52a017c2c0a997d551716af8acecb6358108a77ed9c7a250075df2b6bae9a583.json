{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\student-finder\\\\src\\\\pages\\\\StudentSearch.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import '../App.css';\n// import { baseUrl } from '../config/baseUrl'\n\n// const StudentSearch = () => {\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [results, setResults] = useState([]);\n\n//     const handleSearch = async () => {\n//         const requestOptions = {\n//             method: \"GET\",\n//             redirect: \"follow\"\n//         };\n//         console.log(\"-------------------\",`${baseUrl}/student/searchstudent/${searchTerm}`);\n//         fetch(`${baseUrl}/student/searchstudent/${searchTerm}`, requestOptions)\n//             .then((response) => response.json())\n//             .then((result) => {\n//                 console.log(\">>>>>>>>>>>>>>>>>>>\", result)\n//                 setResults(result)\n//             })\n//             .catch((error) => console.error(error));\n//     };\n\n//     return (\n//         <div>\n//         <div className=\"heading-container\">\n//             <h1>Student Finder</h1>\n//         </div>\n\n//         <div className=\"search-container\">\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Search students by name\"\n//                 value={searchTerm}\n//                 onChange={e => setSearchTerm(e.target.value)}\n//             />\n//             <button onClick={handleSearch}>Search</button>\n//         </div>\n\n//         {results.length > 0 && (\n//             <div>\n\n//                 <ul>\n//                     {results.students.map(student => (\n//                         <li key={student._id}>\n//                             <div className=\"student-info\">\n//                                 <span className=\"student-name\">{student.name}</span>\n//                                 <span className=\"student-details\">Email: {student.email}</span>\n//                                 <span className=\"student-details\">Standard: {student.std}</span>\n//                                 <span className=\"student-details\">Division: {student.division}</span>\n//                             </div>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         )}\n\n//     </div>\n\n//     );\n// };\n\n// export default StudentSearch;\n\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { baseUrl } from '../config/baseUrl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentSearch = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [results, setResults] = useState([]);\n\n  // Function to fetch all students\n  const fetchAllStudents = async () => {\n    const requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n    try {\n      const response = await fetch(`${baseUrl}/student/searchstudent`);\n      const data = await response.json();\n      setResults(data.students);\n    } catch (error) {\n      console.error(\"Error fetching students:\", error);\n    }\n  };\n\n  // Function to handle search\n  const handleSearch = async () => {\n    if (!searchTerm) {\n      // If search term is empty, fetch all students\n      fetchAllStudents();\n      return;\n    }\n    const requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n    fetch(`${baseUrl}/student/searchstudent/y`, requestOptions).then(response => response.json()).then(result => {\n      console.log(result);\n      setResults(result.students);\n    }).catch(error => console.error(error));\n  };\n\n  // Fetch all students when component mounts\n  useEffect(() => {\n    fetchAllStudents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Student Finder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search students by name\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: results.map(student => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"student-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"student-name\",\n              children: student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"student-details\",\n              children: [\"Email: \", student.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"student-details\",\n              children: [\"Standard: \", student.std]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"student-details\",\n              children: [\"Division: \", student.division]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this)\n        }, student._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n_s(StudentSearch, \"2soMt97JgYDXDEJKDEc37/Qg4+E=\");\n_c = StudentSearch;\nexport default StudentSearch;\nvar _c;\n$RefreshReg$(_c, \"StudentSearch\");","map":{"version":3,"names":["React","useState","useEffect","baseUrl","jsxDEV","_jsxDEV","StudentSearch","_s","searchTerm","setSearchTerm","results","setResults","fetchAllStudents","requestOptions","method","redirect","response","fetch","data","json","students","error","console","handleSearch","then","result","log","catch","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","student","name","email","std","division","_id","_c","$RefreshReg$"],"sources":["C:/Users/Home/student-finder/src/pages/StudentSearch.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import '../App.css';\r\n// import { baseUrl } from '../config/baseUrl'\r\n\r\n\r\n// const StudentSearch = () => {\r\n//     const [searchTerm, setSearchTerm] = useState('');\r\n//     const [results, setResults] = useState([]);\r\n\r\n//     const handleSearch = async () => {\r\n//         const requestOptions = {\r\n//             method: \"GET\",\r\n//             redirect: \"follow\"\r\n//         };\r\n//         console.log(\"-------------------\",`${baseUrl}/student/searchstudent/${searchTerm}`);\r\n//         fetch(`${baseUrl}/student/searchstudent/${searchTerm}`, requestOptions)\r\n//             .then((response) => response.json())\r\n//             .then((result) => {\r\n//                 console.log(\">>>>>>>>>>>>>>>>>>>\", result)\r\n//                 setResults(result)\r\n//             })\r\n//             .catch((error) => console.error(error));\r\n//     };\r\n\r\n\r\n\r\n//     return (\r\n//         <div>\r\n//         <div className=\"heading-container\">\r\n//             <h1>Student Finder</h1>\r\n//         </div>\r\n    \r\n//         <div className=\"search-container\">\r\n//             <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Search students by name\"\r\n//                 value={searchTerm}\r\n//                 onChange={e => setSearchTerm(e.target.value)}\r\n//             />\r\n//             <button onClick={handleSearch}>Search</button>\r\n//         </div>\r\n    \r\n//         {results.length > 0 && (\r\n//             <div>\r\n                \r\n//                 <ul>\r\n//                     {results.students.map(student => (\r\n//                         <li key={student._id}>\r\n//                             <div className=\"student-info\">\r\n//                                 <span className=\"student-name\">{student.name}</span>\r\n//                                 <span className=\"student-details\">Email: {student.email}</span>\r\n//                                 <span className=\"student-details\">Standard: {student.std}</span>\r\n//                                 <span className=\"student-details\">Division: {student.division}</span>\r\n//                             </div>\r\n//                         </li>\r\n//                     ))}\r\n//                 </ul>\r\n//             </div>\r\n//         )}\r\n    \r\n  \r\n//     </div>\r\n    \r\n//     );\r\n// };\r\n\r\n// export default StudentSearch;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport { baseUrl } from '../config/baseUrl'\r\n\r\nconst StudentSearch = () => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [results, setResults] = useState([]);\r\n\r\n    // Function to fetch all students\r\n    const fetchAllStudents = async () => {\r\n        const requestOptions = {\r\n            method: \"GET\",\r\n            redirect: \"follow\"\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`${baseUrl}/student/searchstudent`);\r\n            const data = await response.json();\r\n            setResults(data.students);\r\n        } catch (error) {\r\n            console.error(\"Error fetching students:\", error);\r\n        }\r\n    };\r\n\r\n    // Function to handle search\r\n    const handleSearch = async () => {\r\n        if (!searchTerm) {\r\n            // If search term is empty, fetch all students\r\n            fetchAllStudents();\r\n            return;\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: \"GET\",\r\n            redirect: \"follow\"\r\n          };\r\n          \r\n          fetch(`${baseUrl}/student/searchstudent/y`, requestOptions)\r\n            .then((response) => response.json())\r\n              .then((result) => {\r\n                  console.log(result)\r\n                  setResults(result.students)\r\n              })\r\n            .catch((error) => console.error(error));\r\n    };\r\n\r\n    // Fetch all students when component mounts\r\n    useEffect(() => {\r\n        fetchAllStudents();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"heading-container\">\r\n                <h1>Student Finder</h1>\r\n            </div>\r\n        \r\n            <div className=\"search-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search students by name\"\r\n                    value={searchTerm}\r\n                    onChange={e => setSearchTerm(e.target.value)}\r\n                />\r\n                <button onClick={handleSearch}>Search</button>\r\n            </div>\r\n        \r\n            <div>\r\n                <ul>\r\n                    {results.map(student => (\r\n                        <li key={student._id}>\r\n                            <div className=\"student-info\">\r\n                                <span className=\"student-name\">{student.name}</span>\r\n                                <span className=\"student-details\">Email: {student.email}</span>\r\n                                <span className=\"student-details\">Standard: {student.std}</span>\r\n                                <span className=\"student-details\">Division: {student.division}</span>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudentSearch;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}